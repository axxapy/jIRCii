
TODO
===
- Allow scripts to load 'child' scripts which are tied to the parent, and on parent unload, the children unload cleanly. The children are not stored in the script auto-load property.
- Text editing caret in Mac OS X is positioning itself at the beginning of the line; no idea why. Fix this behavior!
- Alter handling of lame, menus and default.irc and add proper options for them.
- Prevent exception when sending to non-connected IRC server, and remind user to connect.
- Fix Makefile to auto-compile apple-specific when Apple OS is detected.
- Finagle server code to allow a colon ':' inside of passwords; right now, it'll bork the server entry.
- Skip the step of going to the Server Editor when 'Edit' is clicked and a server item is selected, and instead go directly to the editor. This step seems redundant!
- Clean up the server window to have a tree format by network, and make it easier to navigate. There are way too many servers in the default mIRC servers.ini
- Implement buffering and delays so that excess floods will not occur when too many channels are joined and synched at once, with the client submitting WHO for each. We need to throttle output to reasonable yet optimized levels.
- Create a debug window, where various debugging modes can be set including detailed output from the code, and from IRC servers. Users will be able to command, for instance, the window to display all input and output to and from the IRC server to the client, and possibly to see what script hooks are firing on them.
- Add attention/notification for channel actions like join/part, or make it all under the ChannelChat option; for notify sign-on and offs; and for CTCP? Also, make it work for DCC chat.

CURRENTLY DOING/INVESTIGATING/WHATEVER ELSE
===
- Move networkName, maxModes, etc. to UserMode.java ?? Ask butane about this class.
- Really check into where we should have a static, generic channel type check (types "#", "&", (also "+" and "!" ??) and where we should check based on information from the IRC server (CHANTYPES=xyz). Right now I'm just using the CHANTYPES method any which way I can.
- Change handling of version string to new routines/method
- Figure out where to stick notification code for DCC chat messages

NOTES
===
    import rero.ircfw.InternalDataList;
    ircData = ((InternalDataList) output.getCapabilities().getDataStructure("clientInformation"));

